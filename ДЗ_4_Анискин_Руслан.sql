-- Внимание! Во всех результирующих выборках должны быть учтены все записи, даже
-- те, которые содержать NULL поля, однако, склейка не должна быть NULL записью!
-- Для этого используйте либо CASE, либо функцию 
-- ISNULL(<выражение>, <значение по умолчанию>) -- Microsoft SQL Server
-- IFNULL(<выражение>, <значение по умолчанию>) -- MySQL
-- COALESCE(<выражение>, <значение по умолчанию>) -- ANSI SQL (стандарт)
-- Соблюдать это условие достаточно для двух полей BIRTHDAY и UNIV_ID.
-- В качестве <значения по умолчания> используйте строку 'unknown'.

-- 1. Составьте запрос для таблицы STUDENT таким образом, чтобы выходная таблица 
--    содержала один столбец типа varchar, содержащий последовательность разделенных 
--    символом ';' (точка с запятой) значений столбцов этой таблицы, и при этом 
--    текстовые значения должны отображаться прописными символами (верхний регистр), 
--    то есть быть представленными в следующем виде: 
--    1;КАБАНОВ;ВИТАЛИЙ;M;550;4;ХАРЬКОВ;01/12/1990;2.
--    ...
--    примечание: в выборку должны попасть студенты из любого города из 5 букв
 
SELECT upper(concat(
id, ';',surname,';', name,';', gender,';', stipend,';', course,';',
 city, ';', ifnull(date_format(birthday, '%d %m %Y'),'BD_Unknown'),';', ifnull(cast(univ_id as character),'UI_Unknown')
 )) as information 
 FROM students WHERE city LIKE '_____'  

-- 2. Составьте запрос для таблицы STUDENT таким образом, чтобы выходная таблица 
--    содержала всего один столбец в следующем виде: 
--    В.КАБАНОВ;местожительства-ХАРЬКОВ;родился-01.12.90
--    ...
--    примечание: в выборку должны попасть студенты, фамилия которых содержит вторую
--    букву 'е' и предпоследнюю букву 'и', либо же фамилия заканчивается на 'ц'

SELECT concat(
ucase(left(name,1)),';', upper(surname),';','местожительство-', upper(city),';', 'родился-',
ifnull(date_format(birthday,'%d.%m.%y'),'неизвестно когда')) as info 
FROM students WHERE surname LIKE'_е%и_' OR surname LIKE'%ц'


-- 3. Составьте запрос для таблицы STUDENT таким образом, чтобы выходная таблица 
--    содержала всего один столбец в следующем виде:
--    т.цилюрик;местожительства-Херсон; учится на IV курсе
--    ...
--    примечание: курс указать римскими цифрами (воспользуйтесь CASE), 
--    отобрать студентов, стипендия которых кратна 200

SELECT concat(
lower(left(name,1)),';', lower(surname),';','местожительства-', city,';', ' учится на ',
	case
    when course=1 then 'I курсе'
    when course=2 then 'II курсе'
    when course=3 then 'III курсе'
    when course=4 then 'IV курсе'
    when course=5 then 'V курсе'
    end) as info_crs
FROM students WHERE stipend %200=0

-- 4. Составьте запрос для таблицы STUDENT таким образом, чтобы выборка 
--    содержала столбец в следующего вида:
--     Нина Федосеева из г.Днепропетровск родилась в 1992 году
--     ...
--     Дмитрий Коваленко из г.Хмельницкий родился в 1993 году
--     ...
--     примечание: для всех городов, в которых более 8 букв

SELECT concat(name, ' ', surname, ' ', 'из г.', city, ' ' , 
	(case 
    when gender='M' then 'родился в '
    when gender='F' then 'родилась в '
    end), date_format(birthday, '%Y'), ' ','году') as information
FROM students WHERE city LIKE'_________%'

-- 5. Вывести фамилии, имена студентов и величину получаемых ими стипендий, 
--    при этом значения стипендий первокурсников должны быть увеличены на 17.5%

SELECT surname,name, course,
case 
when course=1 then (STIPEND+stipend*0.175)
else stipend
end as stipend_increased
FROM students

-- 6. Вывести наименования всех учебных заведений и их расстояния 
--    (придумать/нагуглить/взять на глаз) до Киева.

SELECT concat('Расстояние от ', name,
	case
		when name='ЛПУ' then ' составляет 540 до Киева'
        when name='ЛГУ' then ' составляет 540 до Киева'
        when name='ХАИ' then ' составляет 480 км до Киева'
        when name='ДПИ' then ' составляет 188 км до Киева'
        when name='ДНТУ' then ' составляет 745 км до Киева'
        when name='ОНПУ' then ' составляет 474 км до Киева'
        when name='ТНТУ' then ' составляет 420 км до Киева'
        when name='ЗДИА' then ' составляет 557 км до Киева'
        when name='БНАУ' then ' составляет 86 км до Киева'
        when name='ХСХА' then ' составляет 545 км до Киева'
        when name='ХНАДУ' then ' составляет 480 км до Киева'
        when city='Киев' then ' зависит от вашего местоположения в Киеве, так как универистет находится в Киеве'
        end) as distance
FROM universities

-- 7. Вывести все учебные заведения и их две последние цифры рейтинга.

SELECT name, right(rating,2)
FROM universities 

-- 8. Составьте запрос для таблицы UNIVERSITY таким образом, чтобы выходная таблица 
--    содержала всего один столбец в следующем виде:
--    Код-1;КПИ-г.Киев;Рейтинг относительно ДНТУ(501) +756
--    ...
--    Код-11;КНУСА-г.Киев;рейтинг относительно ДНТУ(501) -18
--    ...
--    примечание: рейтинг вычислить относительно ДНТУшного, а также должен 
--    присутствовать знак (+/-), рейтинг ДНТУ заранее известен = 501

SELECT concat('Код-',id,';',name,'-г.',city,';','рейтинг относительно ДНТУ(501)', 
	case
		when (rating-501)>0 then '+'
		when (rating-501)<0 then '-'
        end 
	, abs(rating-501),' ') 
    as rai_uni
    FROM universities
    
    
-- 9. Составьте запрос для таблицы UNIVERSITY таким образом, чтобы выходная таблица 
--    содержала всего один столбец в следующем виде:
--    Код-1;КПИ-г.Киев;рейтинг состоит из 12 сотен
--    Код-2;КНУ-г.Киев;рейтинг состоит из 6 сотен
--    ...
--    примечание: в рейтинге необходимо указать кол-во сотен

SELECT concat('Код-', id,';', name,'-г.', city,';','рейтинг состоит из ', round(rating/100), ' сотен') as infor
FROM universities




